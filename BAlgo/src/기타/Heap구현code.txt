#include <stdio.h>
#include <algorithm>
#define MAX_N 100009
using namespace std;
 
struct max_heap {
private:
	int n, s[MAX_N];
public:
	void init() { n=0; }
	void push(int a){
		s[++n] = a;
		for (int i=n;i>1;i>>=1){
			int j = i>>1;
			if (s[i] > s[j]) swap(s[i], s[j]);
			else break;
		}
	}
	bool is_empty(){ return n==0; }
	void pop(){
		if (is_empty()) return;
		s[1]=s[n--];
		for (int i=1;i*2<=n;){
			int j = 2*i;
			if (2*i+1<=n && s[2*i] < s[2*i+1]) j=2*i+1;
 
			if (s[i] < s[j]){ swap(s[i], s[j]); i=j; }
			else break;
		}
	}
	int top(){ return s[1]; }
}pq;
 
int main(){
	pq.push(1);
	pq.push(4);
	pq.push(3);
	pq.push(2);
	pq.push(5);
 
	while(!pq.is_empty()){
		printf("%d\n", pq.top());
		pq.pop();
	}
}